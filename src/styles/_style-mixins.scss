
@mixin styled-font {
  font-family: "Quicksand", sans-serif !important;
  font-optical-sizing: auto;
  font-style: normal;
  line-height: 140%;
}

@mixin common-font {
  font-family: "Open Sans", sans-serif;
  font-optical-sizing: auto;
  font-style: normal;
  font-weight: 400;
  line-height: 160%;
}

@mixin headline-1 {
  @include styled-font;
  font-size: 4rem;
  font-weight: 600;
}

@mixin headline-2 {
  @include styled-font;
  font-size: 2.6rem;
  font-weight: 500;
}

@mixin headline-3 {
  @include styled-font;
  font-size: 2rem;
  font-weight: 500;
}

@mixin headline-4 {
  @include common-font;
  font-size: 1.6rem;
  font-weight: 400;
}

@mixin headline-5 {
  @include common-font;
  font-size: 1.3rem;
  font-weight: 500;
}

@mixin headline-6 {
  @include common-font;
  font-size: 1.2rem;
  font-weight: 400;
}

h1 {
  @include headline-1;
}
h2 {
  @include headline-2;
}
h3 {
  @include headline-3;
}
h4 {
  @include headline-4;
}
h5 {
  @include headline-5;

  mat-icon {
    font-size: 1.6rem;
    height: 16px;
    width: 20px;
  }
}

h6 {
  @include headline-6;

  mat-icon {
    font-size: 1.4rem;
    height: 14px;
    width: 16px;
  }
}

// -------------------- Background

@mixin primary-main-background {
  background-color: $primary-color;
  color: $light-text-color;
}

@mixin primary-light-background {
  background-color: $primary-light-color;
  color: $light-text-color ;
}

@mixin primary-dark-background {
  background-color: $primary-dark-color;
  color: $light-text-color ;
}

@mixin primary-main-button {
  background-color: $primary-color;
  color: $light-text-color;

  &:hover {
    filter: brightness(80%);
  }
}

@mixin secondary-main-background {
  background-color: $secondary-color;
  color: $light-text-color;
}

@mixin secondary-main-background-light {
  background-color: $secondary-light-color;
  color: $light-text-color ;
}

@mixin accent-main-background {
  background-color: $accent-color !important;
  color: $dark-text-color !important;
}

@mixin accent-light-background {
  background-color: $accent-light-color !important;
  color: $dark-text-color !important;
}

@mixin warn-light-background {
  background-color: $warn-light-color !important;
  color: $dark-text-color !important;
}

@mixin warn-dark-background {
  background-color: $warn-dark-color !important;
  color: $light-text-color !important;
}

@mixin light-gray-background {
  background-color: $gray-extra-light-color !important;
  color: $dark-text-color !important;
}

@mixin invalid-dark-background {
  background-color: $gray-color !important;
  color: $light-text-color !important;
}

// -------------------- Multiple layer map
@function map-deep-get($map, $keys...) {
  @each $key in $keys {
    @if not map-has-key($map, $key) {
      @return null;
    }
    $map: map-get($map, $key);
  }
  @return $map;
}

// -------------------- Margin & padding
$space-amounts: (0, 2, 4, 5, 8, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 75, 80, 90, 100, 150, 200);
$sides: (
  "": "all",
  "t": "top",
  "b": "bottom",
  "l": "left",
  "r": "right",
);
@each $space in $space-amounts {
  @each $prefix, $value in $sides {
    $property: if($prefix == '', '', -#{$value});
    .m#{$prefix}-#{$space} {
      margin#{$property}: #{$space}px !important;
    }
    .p#{$prefix}-#{$space} {
      padding#{$property}: #{$space}px !important;
    }
  }
}

// -------------------- Element centering
@mixin center($pos:both, $type:none) {
  @if ($type==inline) {
    display: inline-flex;
  } @else {
    display: flex;
  }

  flex-direction: row;

  @if ($pos==vertical) {
    align-items: center;
  } @else if ($pos==horizontal) {
    justify-content: center;
  } @else if ($pos==both) {
    justify-content: center;
    align-items: center;
  }
}

.center {
  &__v {
    @include center(vertical);
  }

  &__vi {
    @include center(vertical, inline);
  }

  &__h {
    @include center(horizontal);
  }

  &__hi {
    @include center(horizontal, inline);
  }

  &__vh {
    @include center(both);
  }

  &__vhi {
    @include center(both, inline);
  }
}

// --------------------
@mixin bg-dark {
  background: map-get($app-primary, dark);
  color: $light-text-color;
}

.bg {
  &__primary {
    background: map-get($app-primary, default);
    color: #fff;

    &a,
    & a{
      color: #fff;
    }

    &-100 {
      background: map-get($app-primary, 100);
    }

    &-light {
      color: #fff;
      background: map-get($app-primary, light);
    }

    &-dark {
      color: #fff;
      background: map-get($app-primary, dark);

      &a,
      & a{
        color: #fff;
      }
    }
  }

  &__secondary {
    background: map-get($app-secondary, default);
  }

  &__accent {
    background: map-get($app-accent, default);
    color: #fff;

    &-light {
      color: map-get($app-gray, 900);
      background: map-get($app-accent, light);
    }

    &-dark {
      color: #fff;
      background: map-get($app-accent, dark);
    }
  }

  &__gray {
    background: map-get($app-gray, 800);

    &-light {
      color: #fff;
      background: map-get($app-gray, 700);
    }

    &-dark {
      color: #fff;
      background: map-get($app-gray, 900);
    }
  }
}

.txt {
  &__white {
    color: #fff;
  }

  &__primary {
    color: map-get($app-primary, default);

    &-light {
      color: map-get($app-primary, light);
    }

    &-dark {
      color: map-get($app-primary, dark);
    }
  }

  &__secondary {
    color: map-get($app-secondary, default);
  }

  &__accent {
    color: map-get($app-accent, default);

    &-light {
      color: map-get($app-accent, light);
    }
  }

  &__warn {
    color: map-get($app-warn, default);

    &-light {
      color: map-get($app-warn, light);
    }

    &-dark {
      color: map-get($app-warn, dark);
    }
  }

  &__gray {
    color: map-get($app-gray, default);

    &-light {
      color: map-get($app-gray, 300);
    }

    &-dark {
      color: map-get($app-gray, 900);
    }
  }

  &__center {
    text-align: center;
  }

  &__left {
    text-align: left;
  }
}

.stroke {
  &__accent {
    border-color: map-get($app-accent, default);

    &-light {
      border-color: map-get($app-accent, light);
    }
  }
}

.icon {
  &__notification:before {
    font-family: "Material Icons";
    content: "\e7f7";
    margin-right: 5px;
    font-size: 24px;
  }

  &__library:before {
    font-family: "Material Icons Outlined";
    content: "\e02e";
    margin-right: 5px;
    font-size: 24px;
  }

  &__hint:before {
    font-family: "Material Icons Outlined";
    content: "\e0f0";
    margin-right: 10px;
    font-size: 24px;
  }

  &__workspace:before {
    font-family: "Material Icons";
    content: "\e7ef";
    margin-right: 5px;
    font-size: 24px;
  }
}

@mixin shadow($value: .44) {
  @if ($value > 0) {
    box-shadow: 1px 1px 1px 0.5px rgba(0, 0, 50, $value) !important;
    position: relative;
    z-index: 1000;
  } @else {
    box-shadow: none !important;
  }
}

.shadow {
  &__none {
    @include shadow(0);
  }

  &__light {
    @include shadow(.05);
  }

  &__medium {
    @include shadow(.22);
  }

  &__dark {
    @include shadow(.55);
  }
}

// --------------------
@mixin hover {
  cursor: pointer;

  &:hover {
    filter: brightness(200%);
  }
}
