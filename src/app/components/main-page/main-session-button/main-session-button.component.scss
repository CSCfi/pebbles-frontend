@import "src/styles.scss";

.mat-icon {
  vertical-align: middle;
}

.session-button-container {
  position: relative;
  width: 110px;
  height: 110px;
  overflow: hidden;
}

.background-circle-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  svg {
    width: 100%;
    height: 100%;

    circle {
      fill: #1a237e !important;
      stroke: #ededed;
    }
  }
}

.progress-spinner-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0;

  ::ng-deep .environment-spinner {
    circle {
      stroke: map-get($colors, accent);
      transform: scale(1, -1);
      translate: (0, -100);
    }

    &.warning circle {
      stroke: map-get($colors, active);
    }
  }
}

.actionable-circle-container {
  width: 100%;
  height: 100%;

  .circle-button {
    border-radius: 50%;
    // border: 1px solid #ddd;
    width: 96px;
    height: 96px;
    overflow: hidden;
    color: map-get($colors, accent);

    .mat-icon {
      font-size: 2.4rem !important;
      color: map-get($colors, gray);
    }

    .time-left,
    .state {
      font-size: 1rem;
      font-weight: 400;
      text-transform: capitalize;
      color: map-get($colors, white);
    }
  }

  .open-button,
  .shutdown-button {
    background: map-get($colors, transparent) !important;
    border-radius: 0;
    width: 100px;
    justify-content: center;
    line-height: 1.5rem;

    .mat-icon {
      color: map-get($colors, white);
      font-size: 1.6rem !important;
    }
  }

  .open-button {
    padding-top: 18px;
    padding-bottom: 5px;
    font-size: 1.2rem;
  }

  .shutdown-button {
    border-top: 1px solid map-get($colors, light-dark);
    font-size: 1.1rem;
    .mat-icon {
      font-size: 1.4rem !important;
      height: 20px;
    }
  }

  .launch-button {
    background: map-get($colors, white);
    border: 1px solid #DDD;

    .mat-icon {
      // color: map-get($colors, light-gray);
      color: map-get($colors, light-active);
    }

    &:hover {
      background: map-get($colors, primary);
      cursor: pointer;

      .mat-icon {
        color: map-get($colors, accent);
      }
    }
  }
}
